[{"content":"Record the procedure of generate static blog with Hugo, and deploy on githubPages automatically.\nHere is my goals:\n blog-source as the source content repo, \u0026lt;your-name\u0026gt;.github.io as the actually githubPages repo Connect above two repos with Github Action, trigger content generation and deploy when code pushed in blog-source  The advantages is as follows:\n Make the blog-soursum ce as private repo, and with \u0026lt;your-name\u0026gt;.github.io as your blog URL. Implement CICD with GitHub Action  I create a diagram to show this idea. Hugo 安装Hugo，然后初始in Install Hugo, and initialize.\n# macOS install hugo brew install hugo  # create site project hugo new site blog-source Select your favorite theme and activate.\ncd blog-source git init  # add paperMod as theme git submodule add https://github.com/adityatelange/hugo-PaperMod themes/paperMod Add a article and start demo.\nhugo new posts/my-first-post.md # start demo for preview hugo server -D Create a repo named blog-source as the remote repo of site blog-source newly created.\ncd blog-source git init git remote add origin \u0026lt;your-remove-git\u0026gt; GithubPages Create a githubPages repo, the name must be \u0026lt;your-name\u0026gt;.github.io. You could refer this document for detail\nConnection Create sshKey: ssh-keygen -t rsa -b 4096 -C \u0026quot;$(git config user.email)\u0026quot; -f gh-pages -N \u0026quot;\u0026quot;\nCopy private key gh-pages, and as the value of secret variable which created in blog-source repo\u0026rsquo;s Settings-\u0026gt;Secrets-\u0026gt;Actions\nCopy public key gh-pages.pub as Deploy Key of ``, and remember to check Read/Write permission.\nCreate GitHub workflow file .github/workflows/gh-pages.yml, the content as follows:\nname: github pages  on:  push:  branches:  - master  # Set a branch to deploy, my branch is master  pull_request:  jobs:  deploy:  runs-on: ubuntu-20.04  steps:  - uses: actions/checkout@v2  with:  submodules: true # Fetch Hugo themes (true OR recursive)  fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod   - name: Setup Hugo  uses: peaceiris/actions-hugo@v2  with:  hugo-version: \u0026#39;0.99.1\u0026#39;  # extended: true   - name: Build  run: hugo --minify   - name: Deploy  uses: peaceiris/actions-gh-pages@v3  with:  external_repository: \u0026lt;your-name\u0026gt;/\u0026lt;your-name\u0026gt;.github.io  publish_branch: master  # the secret key  deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}  publish_dir: ./public After all completion, push code in blog-source which will trigger workflow, you could check the running status at the repo\u0026rsquo;s Action Page.\nIf there isn\u0026rsquo;t any exception, you can visit your blog with the URL \u0026lt;your-name\u0026gt;/\u0026lt;your-name\u0026gt;.github.io after a while.\n总结 In conclusion, it\u0026rsquo;s easy to generate a static website or create a githubPages repo. The crux is the connection of the two repo and CICD. Always refer the official document when encounter problem.\n参考  https://github.com/peaceiris/actions-gh-pages https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages https://gohugo.io/hosting-and-deployment/hosting-on-github/  ","permalink":"https://erenming.github.io/en/posts/hugo-with-githubpages/","summary":"Record the procedure of generate static blog with Hugo, and deploy on githubPages automatically.\nHere is my goals:\n blog-source as the source content repo, \u0026lt;your-name\u0026gt;.github.io as the actually githubPages repo Connect above two repos with Github Action, trigger content generation and deploy when code pushed in blog-source  The advantages is as follows:\n Make the blog-soursum ce as private repo, and with \u0026lt;your-name\u0026gt;.github.io as your blog URL. Implement CICD with GitHub Action  I create a diagram to show this idea.","title":"Deploy blog with Hugo and GithubPages"},{"content":"Hi, my friend!\nWelcome to my tech blog Nothings Special, my name is erenming. And my motto is Keep it simple stupid. Yeah, it\u0026rsquo;s KISS the wellknown design principal!\nI\u0026rsquo;m a software engineer. I use Go, Python as my mainly develop language, and engaged with devops, monitor, cloud native.\nFinally, really welcome to contact with me, and discuss everything :P\n","permalink":"https://erenming.github.io/en/about/","summary":"Hi, my friend!\nWelcome to my tech blog Nothings Special, my name is erenming. And my motto is Keep it simple stupid. Yeah, it\u0026rsquo;s KISS the wellknown design principal!\nI\u0026rsquo;m a software engineer. I use Go, Python as my mainly develop language, and engaged with devops, monitor, cloud native.\nFinally, really welcome to contact with me, and discuss everything :P","title":"About"}]